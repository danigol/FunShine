plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    alias(libs.plugins.compose.compiler)
}

android {
    namespace 'com.daniellegolinsky.funshine'
    compileSdk 36

    defaultConfig {
        applicationId "com.daniellegolinsky.funshine"
        minSdk 29
        targetSdk 36
        versionCode 8
        versionName "1.0.7"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("long", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String","VERSION_NAME","\"${defaultConfig.versionName}\"")
        }
        debug {
            buildConfigField("long", "VERSION_CODE", "${defaultConfig.versionCode}")
            buildConfigField("String","VERSION_NAME","\"${defaultConfig.versionName}\"")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
        compose true
        buildConfig = true
    }
}

dependencies {

    implementation libs.androidx.core.ktx
    implementation libs.androidx.appcompat
    implementation libs.material
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx

    implementation project(path: ':themeresources')
    implementation files('./libs/funshinelibrary-release.aar')

    implementation libs.play.services.location

    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    // Compose
    def composeBom = libs.androidx.compose.bom
    implementation composeBom
    androidTestImplementation composeBom
    implementation libs.androidx.material3
    implementation libs.androidx.ui.tooling.preview
    debugImplementation libs.androidx.ui.tooling
    implementation libs.androidx.activity.compose
    implementation libs.androidx.lifecycle.viewmodel.compose

    // Accompanist for Compose
    implementation libs.accompanist.permissions


    implementation libs.androidx.navigation.compose

    // Datastore
    implementation libs.androidx.datastore.preferences

    // Serialization
    implementation libs.kotlinx.serialization.json

    // Hilt (DI)
    implementation libs.hilt.android
    kapt libs.hilt.compiler
    implementation libs.androidx.hilt.navigation.fragment
    implementation libs.androidx.hilt.navigation.compose
    implementation(libs.androidx.lifecycle.runtime.compose)

    // Retrofit
    implementation libs.retrofit
    implementation libs.gson
    implementation libs.converter.gson
    implementation libs.logging.interceptor


    // Tests
    androidTestImplementation libs.androidx.ui.test.junit4
    debugImplementation libs.androidx.ui.test.manifest
    testImplementation libs.kotlinx.coroutines.test
}

kapt {
    correctErrorTypes true
}
